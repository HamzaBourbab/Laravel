image: jakzal/phpqa
cache:
    paths:
        - vendor/


 
stages:
  - before
  - SecurityChecker
  - UnitTests
  - codingStandard
  - deploy

before:
    stage: before
    script:
      - composer install  --no-cache --ignore-platform-req=ext-mongodb

    allow_failure: true



security-checker:
    stage: SecurityChecker
    script:
        - local-php-security-checker security:check composer.lock
    allow_failure: false



phpunit:
    image: php:8.0
    stage: UnitTests
    services:
        - name: mysql:8.0
          alias: mysql
    variables:
        MYSQL_ROOT_PASSWORD: pass_test
        MYSQL_DATABASE: myapptest
        MYSQL_USER: myapptest
        MYSQL_PASSWORD: myapptest
        DATABASE_URL: 'mysql://root:pass_test@mysql:3306/myapptest_test?serverVersion=8.0'

    before_script:
        - apt-get update && apt-get install -y git libzip-dev
        - curl -sSk https://getcomposer.org/installer | php -- --disable-tls && mv composer.phar /usr/local/bin/composer
        - docker-php-ext-install mysqli pdo pdo_mysql zip
        #- php bin/console doctrine:database:drop --env=test --force
        - composer require symfony/runtime --ignore-platform-req=ext-mongodb
        - php bin/console doctrine:database:create --env=test
        - php bin/console doctrine:migration:migrate --env=test --no-interaction
    script:
        - php bin/phpunit
    allow_failure: false


sonarqube_check:
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: codingStandard
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: false
  only:
    - main


deployment:
  image: ubuntu:latest
  stage: deploy
  variables:
    TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
    TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

  tags:
    - deployment
  script:
     - apt update -y -qq
     - apt install -y -qq git
     - apt install -y -qq sshpass
     - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
     - eval $(ssh-agent -s)
     - ssh-add <(echo "$ID_RSA")
     - mkdir -p ~/.ssh
     - chmod 700 ~/.ssh
     - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
     - sshpass $SERVER_PWD  ssh $SERVER_USER@$SERVER_IP "cd /var/www/clients/client1/web6/web && git checkout main && git pull origin main && exit"
  environment:
    name: production
    url: http://185.187.169.16
  only:
    - main